{"ast":null,"code":"import _defineProperty from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaeldoho/Documents/Dev/capstone/src/Assets/Javascript/Page.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Styles/Page.scss';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nvar Page =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Page, _Component);\n\n  function Page() {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Page).call(this));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        input: e.target.value\n      });\n    };\n\n    _this.clearInput = function () {\n      _this.setState({\n        input: ''\n      });\n    };\n\n    _this.handlekey = function (e) {\n      e.preventDefault();\n      var inputWord = _this.input.current.value;\n      console.log(inputWord);\n\n      var newArray = _this.state.words.filter(function (e) {\n        return e !== inputWord;\n      });\n\n      _this.setState({\n        words: newArray\n      });\n\n      _this.clearInput();\n\n      console.log(newArray);\n\n      if (_this.state.words.indexOf(inputWord) > -1) {\n        _this.setState({\n          score: _this.state.score + 1\n        });\n      }\n    };\n\n    _this.doIntervalChange = function () {\n      _this.interval = setInterval(function () {\n        if (_this.state.count > 0) {\n          _this.setState(function (prevState) {\n            return {\n              count: prevState.count - 1\n            };\n          });\n        } else {\n          clearInterval(_this.interval);\n          alert('GAMER OVER' + '                                                                            ' + 'SCORE:' + _this.state.score);\n        }\n      }, 1000);\n    };\n\n    _this.input = React.createRef();\n    _this.state = {\n      words: ['chop', 'smelly', 'untidy', 'selection', 'letter'],\n      input: '',\n      score: 0,\n      count: 3\n    };\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        count: this.state.count\n      });\n      this.doIntervalChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.words.map(function (item) {\n        return React.createElement(\"h1\", {\n          className: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, item);\n      }), React.createElement(\"div\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Score:\", this.state.score), React.createElement(\"div\", {\n        className: \"timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Timer:\", this.state.count), React.createElement(\"form\", {\n        className: \"search\",\n        onSubmit: function onSubmit(event) {\n          return _this2.handlekey(event);\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", (_React$createElement = {\n        type: \"reset\"\n      }, _defineProperty(_React$createElement, \"type\", \"text\"), _defineProperty(_React$createElement, \"ref\", this.input), _defineProperty(_React$createElement, \"value\", this.state.input), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(Link, {\n        to: '/start',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"retry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Try again\")));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport { Page as default };","map":{"version":3,"sources":["/Users/michaeldoho/Documents/Dev/capstone/src/Assets/Javascript/Page.js"],"names":["React","Component","Link","BrowserRouter","Router","Route","Switch","Redirect","Page","handleChange","e","setState","input","target","value","clearInput","handlekey","preventDefault","inputWord","current","console","log","newArray","state","words","filter","indexOf","score","doIntervalChange","interval","setInterval","count","prevState","clearInterval","alert","createRef","map","item","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport '../Styles/Page.scss';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\n\n\nexport default class Page extends Component {\n    constructor(){\n        super();\n        this.input = React.createRef();\n        this.state = { \n            words:[\n            'chop',\n            'smelly',\n            'untidy',\n            'selection',\n            'letter'\n        ],\n            input: '',\n            score:0,\n            count: 3\n        }\n    };\n    handleChange = (e) =>{\n        this.setState({\n            input:e.target.value\n        })\n    };\n    clearInput= () => {\n        this.setState({\n            input:''\n        })\n    };\n    handlekey = (e) => {\n        e.preventDefault()\n        let inputWord = this.input.current.value;\n        console.log(inputWord);\n        let newArray = this.state.words.filter(e => e !== inputWord);\n            this.setState({\n                    words: newArray, \n                }) \n                this.clearInput();\n\n              console.log(newArray)  \n        if(this.state.words.indexOf(inputWord) > -1){\n            this.setState({\n                score: this.state.score+1,\n            })\n        }       \n    };\n\n\n\n    componentDidMount () {\n        this.setState({\n          count: this.state.count\n        })\n        this.doIntervalChange()\n       \n      }\n      doIntervalChange = () => {\n        \n        this.interval = setInterval(\n            () => {\n              if(this.state.count > 0) {\n                this.setState(prevState => ({\n                  count: prevState.count - 1\n                }))\n              } else {\n                clearInterval(this.interval)\n                alert('GAMER OVER' + '                                                                            ' + 'SCORE:' + this.state.score)\n              }\n            },\n            1000\n          )\n    \n      }\n\n      componentWillUnmount () {\n        clearInterval(this.interval)\n      }\n\n    \n    render() {      \n    return (\n      <div className='container'>\n        {this.state.words.map(item =>{\n            return <h1 className = {item}>\n                        {item}\n                    </h1>\n\n        })}\n        <div className='score'>\n            Score:{this.state.score}\n        </div>\n        <div className='timer'>\n            Timer:{this.state.count}\n        </div>\n        <form className='search' onSubmit={(event)=>this.handlekey(event)} onChange={this.handleChange}>\n            <input type =\"reset\" type='text' ref={this.input} value={this.state.input} />\n        </form>\n        <Link to={'/start'}>\n            <button className='retry'>Try again</button>\n        </Link>\n      </div>\n    )\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}