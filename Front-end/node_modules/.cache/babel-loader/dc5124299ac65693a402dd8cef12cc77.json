{"ast":null,"code":"import _defineProperty from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaeldoho/Documents/Dev/capstone/src/Assets/Javascript/Page.js\";\nimport React, { Component } from 'react';\nimport '../Styles/Page.scss';\n\nvar Page =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Page, _Component);\n\n  function Page() {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Page).call(this));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        input: e.target.value\n      });\n    };\n\n    _this.clearInput = function () {\n      _this.setState({\n        input: ''\n      });\n    };\n\n    _this.handlekey = function (e) {\n      e.preventDefault();\n      var inputWord = _this.input.current.value;\n      console.log(inputWord);\n\n      var newArray = _this.state.words.filter(function (e) {\n        return e !== inputWord;\n      });\n\n      _this.setState({\n        words: newArray\n      });\n\n      _this.clearInput();\n\n      console.log(newArray);\n\n      if (_this.state.words.indexOf(inputWord) > -1) {\n        _this.setState({\n          score: _this.state.score + 1\n        });\n      }\n    };\n\n    _this.doIntervalChange = function () {\n      _this.myInterval = setInterval(function () {\n        _this.setState(function (prevState) {\n          return {\n            count: prevState.count - 1\n          };\n        });\n      }, 1000);\n    };\n\n    _this.input = React.createRef();\n    _this.state = {\n      words: ['one', 'two', 'three', 'four', 'five'],\n      input: '',\n      score: 0,\n      count: 3\n    };\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        count: this.state.count\n      });\n      this.doIntervalChange();\n\n      if (this.state.count > -1) {\n        alert('Game over');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.words.map(function (item) {\n        return React.createElement(\"h1\", {\n          className: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, item);\n      }), React.createElement(\"div\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Score:\", this.state.score), React.createElement(\"div\", {\n        className: \"timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Timer:\", this.state.count), React.createElement(\"form\", {\n        className: \"search\",\n        onSubmit: function onSubmit(event) {\n          return _this2.handlekey(event);\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", (_React$createElement = {\n        type: \"reset\"\n      }, _defineProperty(_React$createElement, \"type\", \"text\"), _defineProperty(_React$createElement, \"ref\", this.input), _defineProperty(_React$createElement, \"value\", this.state.input), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))));\n    }\n  }]);\n\n  return Page;\n}(Component); //grab the input value and check if it is inside the words array\n//have to loop and do a comparason \n// if found use filter or push the values you want to keep into a new array\n//setInterval\n\n\nexport { Page as default };","map":{"version":3,"sources":["/Users/michaeldoho/Documents/Dev/capstone/src/Assets/Javascript/Page.js"],"names":["React","Component","Page","handleChange","e","setState","input","target","value","clearInput","handlekey","preventDefault","inputWord","current","console","log","newArray","state","words","filter","indexOf","score","doIntervalChange","myInterval","setInterval","prevState","count","createRef","alert","map","item","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../Styles/Page.scss';\n\n\nexport default class Page extends Component {\n    constructor(){\n        super();\n        this.input = React.createRef();\n        this.state = { \n            words:[\n            'one',\n            'two',\n            'three',\n            'four',\n            'five'\n        ],\n            input: '',\n            score:0,\n            count: 3\n        }\n    };\n    handleChange = (e) =>{\n        this.setState({\n            input:e.target.value\n        })\n    };\n    clearInput= () => {\n        this.setState({\n            input:''\n        })\n    };\n    handlekey = (e) => {\n        e.preventDefault()\n        let inputWord = this.input.current.value;\n        console.log(inputWord);\n        let newArray = this.state.words.filter(e => e !== inputWord);\n            this.setState({\n                    words: newArray, \n                }) \n                this.clearInput();\n\n              console.log(newArray)  \n        if(this.state.words.indexOf(inputWord) > -1){\n            this.setState({\n                score: this.state.score+1,\n            })\n        }       \n    };\n\n    componentDidMount () {\n        this.setState({\n          count: this.state.count\n        })\n        this.doIntervalChange()\n        if(this.state.count > -1){\n            alert('Game over')\n        }\n      }\n      doIntervalChange = () => {\n          this.myInterval = setInterval(() => {\n          this.setState(prevState => ({\n            count: prevState.count - 1\n          }))\n        }, 1000)\n      \n      }\n\n    \n    render() {      \n    return (\n      <div className='container'>\n        {this.state.words.map(item =>{\n            return <h1 className = {item}>\n                        {item}\n                    </h1>\n\n        })}\n        <div className='score'>\n            Score:{this.state.score}\n        </div>\n        <div className='timer'>\n            Timer:{this.state.count}\n        </div>\n        <form className='search' onSubmit={(event)=>this.handlekey(event)} onChange={this.handleChange}>\n            <input type =\"reset\" type='text' ref={this.input} value={this.state.input} />\n        </form>\n      </div>\n    )\n  }\n}\n\n//grab the input value and check if it is inside the words array\n\n//have to loop and do a comparason \n\n// if found use filter or push the values you want to keep into a new array\n\n//setInterval\n\n\n\n"]},"metadata":{},"sourceType":"module"}