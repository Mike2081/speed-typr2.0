{"ast":null,"code":"import _classCallCheck from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaeldoho/Documents/Dev/capstone/src/Assets/Javascript/Page.js\";\nimport React, { Component } from 'react';\nvar words = [];\n\nvar Page =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Page, _Component);\n\n  function Page() {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Page).call(this));\n\n    _this.handlekey = function (event) {\n      // if(event.key === 'Enter'){\n      //     console.log('worked')\n      // }\n      event.preventDefault();\n      var inputWord = _this.input.current.value;\n      console.log(inputWord); // for( let i = 0; i < words.length; i++){\n      //     if( words[i] === inputWord ){\n      //     }\n      // }\n\n      var newArray = words.filter(function (e) {\n        return e !== inputWord;\n      });\n      console.log(inputWord); // console.log(words[i]);\n\n      console.log(newArray);\n\n      if (newArray.length !== _this.state.words) {\n        _this.setState({\n          words: newArray\n        });\n      }\n    };\n\n    _this.input = React.createRef();\n    _this.state = {\n      words: ['one', 'two', 'three']\n    };\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.words.map(function (item) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, item);\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        onSubmit: function onSubmit() {\n          return _this2.handlekey;\n        },\n        ref: this.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Page;\n}(Component); //grab the input value and check if it is inside the words array\n//have to loop and do a comparason \n// if found use filter or push the values you want to keep into a new array\n//setInterval\n//display none\n\n\nexport { Page as default };","map":{"version":3,"sources":["/Users/michaeldoho/Documents/Dev/capstone/src/Assets/Javascript/Page.js"],"names":["React","Component","words","Page","handlekey","event","preventDefault","inputWord","input","current","value","console","log","newArray","filter","e","length","state","setState","createRef","map","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,KAAK,GAAG,EAAd;;IAIqBC,I;;;;;AACjB,kBAAa;AAAA;;AAAA;;AACT;;AADS,UAYbC,SAZa,GAYD,UAACC,KAAD,EAAW;AACnB;AACA;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,SAAS,GAAG,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,KAAnC;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAPmB,CASnB;AACA;AAEA;AACA;;AACA,UAAIM,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAa,UAAAC,CAAC;AAAA,eAAIA,CAAC,KAAKR,SAAV;AAAA,OAAd,CAAf;AACQI,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAfW,CAgBX;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AACA,UAAGA,QAAQ,CAACG,MAAT,KAAoB,MAAKC,KAAL,CAAWf,KAAlC,EAAwC;AACxC,cAAKgB,QAAL,CAAc;AACVhB,UAAAA,KAAK,EAAEW;AADG,SAAd;AAGH;AACZ,KAnCgB;;AAET,UAAKL,KAAL,GAAaR,KAAK,CAACmB,SAAN,EAAb;AACA,UAAKF,KAAL,GAAa;AACTf,MAAAA,KAAK,EAAC,CACN,KADM,EAEN,KAFM,EAGN,OAHM;AADG,KAAb;AAHS;AAUZ;;;;6BA0BQ;AAAA;;AACT,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKe,KAAL,CAAWf,KAAX,CAAiBkB,GAAjB,CAAqB,UAAAC,IAAI,EAAG;AACzB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAL,CAAP;AACH,OAFA,CADH,EAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE;AAAA,iBAAK,MAAI,CAACjB,SAAV;AAAA,SAA7B;AAAmD,QAAA,GAAG,EAAE,KAAKI,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EA9C+BP,S,GAiDlC;AAEA;AAEA;AAEA;AAEA;;;SAzDqBE,I","sourcesContent":["import React, { Component } from 'react'\n\nconst words = [\n    \n];\n\nexport default class Page extends Component {\n    constructor(){\n        super();\n        this.input = React.createRef();\n        this.state = { \n            words:[\n            'one',\n            'two',\n            'three']\n        }\n        \n    }\n\n    handlekey = (event) => {\n        // if(event.key === 'Enter'){\n        //     console.log('worked')\n        // }\n        event.preventDefault()\n        let inputWord = this.input.current.value;\n        \n        console.log(inputWord)\n\n        // for( let i = 0; i < words.length; i++){\n        //     if( words[i] === inputWord ){\n                \n        //     }\n        // }\n        let newArray = words.filter(e => e !== inputWord);\n                console.log(inputWord);\n                // console.log(words[i]);\n                console.log(newArray)\n                if(newArray.length !== this.state.words){\n                this.setState({\n                    words: newArray\n                })\n            }\n};\n    render() {      \n    return (\n      <div>\n        {this.state.words.map(item =>{\n            return <h1>{item}</h1>\n        })}\n        <input type='text' onSubmit={()=> this.handlekey } ref={this.input} />\n      </div>\n    )\n  }\n}\n\n//grab the input value and check if it is inside the words array\n\n//have to loop and do a comparason \n\n// if found use filter or push the values you want to keep into a new array\n\n//setInterval\n\n//display none\n\n"]},"metadata":{},"sourceType":"module"}