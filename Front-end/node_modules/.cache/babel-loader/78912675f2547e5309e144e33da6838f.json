{"ast":null,"code":"import _classCallCheck from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaeldoho/Documents/Dev/capstone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaeldoho/Documents/Dev/capstone/src/Assets/Javascript/Page.js\";\nimport React, { Component } from 'react';\nvar words = ['one', 'two', 'three'];\n\nvar Page =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Page, _Component);\n\n  function Page() {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Page).call(this));\n\n    _this.handlekey = function (event) {\n      if (event.key === 'Enter') {\n        console.log('worked');\n      }\n\n      var inputWord = _this.input.current.value;\n      console.log(inputWord);\n\n      for (var i = 0; i < words.length - 1; i++) {\n        if (words[i] === inputWord) {\n          words.splice(i, 1);\n        }\n      }\n    };\n\n    _this.input = React.createRef();\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"render\",\n    // for( var i = 0; i < array.length-1; i++){ \n    //     if ( array[i] === 5) {\n    //       arr.splice(i, 1); \n    //     }\n    //  }\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, words.map(function (item) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, item);\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        onKeyPress: this.handlekey,\n        ref: this.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Page;\n}(Component); //grab the input value and check if it is inside the words array\n//have to loop and do a comparason \n// if found use filter or push the values you want to keep into a new array\n//setInterval\n//display none\n\n\nexport { Page as default };","map":{"version":3,"sources":["/Users/michaeldoho/Documents/Dev/capstone/src/Assets/Javascript/Page.js"],"names":["React","Component","words","Page","handlekey","event","key","console","log","inputWord","input","current","value","i","length","splice","createRef","map","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,KAAK,GAAG,CACV,KADU,EAEV,KAFU,EAGV,OAHU,CAAd;;IAMqBC,I;;;;;AACjB,kBAAa;AAAA;;AAAA;;AACT;;AADS,UAIbC,SAJa,GAID,UAACC,KAAD,EAAW;AACnB,UAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AAED,UAAIC,SAAS,GAAG,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,KAAnC;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AAEA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAAN,GAAa,CAAjC,EAAoCD,CAAC,EAArC,EAAwC;AACpC,YAAIX,KAAK,CAACW,CAAD,CAAL,KAAaJ,SAAjB,EAA6B;AACzBP,UAAAA,KAAK,CAACa,MAAN,CAAaF,CAAb,EAAgB,CAAhB;AACH;AACJ;AAEJ,KAlBY;;AAET,UAAKH,KAAL,GAAYV,KAAK,CAACgB,SAAN,EAAZ;AAFS;AAGZ;;;;AAiBD;AACA;AACA;AACA;AACA;6BAES;AAIT,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGd,KAAK,CAACe,GAAN,CAAU,UAAAC,IAAI,EAAG;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAL,CAAP;AACH,OAFA,CADH,EAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,UAAU,EAAG,KAAKd,SAArC;AAAiD,QAAA,GAAG,EAAE,KAAKM,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EAvC+BT,S,GA0ClC;AAEA;AAEA;AAEA;AAEA;;;SAlDqBE,I","sourcesContent":["import React, { Component } from 'react'\n\nconst words = [\n    'one',\n    'two',\n    'three'\n];\n\nexport default class Page extends Component {\n    constructor(){\n        super();\n        this.input =React.createRef();\n    }\n    handlekey = (event) => {\n        if(event.key === 'Enter'){\n            console.log('worked')\n        }\n        \n        let inputWord = this.input.current.value;\n        console.log(inputWord)\n\n        for( let i = 0; i < words.length-1; i++){\n            if( words[i] === inputWord ) {\n                words.splice(i, 1);\n            }\n        }\n\n    };\n\n    // for( var i = 0; i < array.length-1; i++){ \n    //     if ( array[i] === 5) {\n    //       arr.splice(i, 1); \n    //     }\n    //  }\n\n    render() {\n        \n\n        \n    return (\n      <div>\n        {words.map(item =>{\n            return <h1>{item}</h1>\n        })}\n        <input type='text' onKeyPress={ this.handlekey } ref={this.input} />\n      </div>\n    )\n  }\n}\n\n//grab the input value and check if it is inside the words array\n\n//have to loop and do a comparason \n\n// if found use filter or push the values you want to keep into a new array\n\n//setInterval\n\n//display none"]},"metadata":{},"sourceType":"module"}